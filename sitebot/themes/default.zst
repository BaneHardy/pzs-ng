#######
# This is the default theme for pzs-ng's dZSbot.
# For a list of variables you can use, please see sitebot/COOKIES
#
# The following header *MUST* be included in every theme submitted by users
# BEGIN --->

##############################################################################
#                                                                            #
#  yourtheme.zst  -  pzs-ng theme                                            #
#                                                                            #
#  Some short description about the theme, how it was inspired or something  #
#  Created by: Your nickname                                                 #
#  Maintained by: Nickname and contact (IRC chan) of the maintainer          #
#  Notes: If you need to point out something, that goes here                 #
#  Tested with: Latest revision it was tested with (i.e: pzs-ng r2005)       #
#                                                                            #
##############################################################################

# <--- END

# Default colors, used for all sections except those defined below
COLOR1		= "04"
COLOR2		= "07"
COLOR3		= "11"

# Custom section colors. Use same section names as defined in dZSbconf.tcl.
# IMPORTANT: You MUST define the same number of colors as there are default colors for each section!
# If you have 3 default colors above, then each section below needs exactly 3 colors.
# Sections not defined here will use the default colors above.
COLOR_GAMES_1	= "05"
COLOR_GAMES_2	= "08"
COLOR_GAMES_3	= "12"
COLOR_APPS_1	= "06"
COLOR_APPS_2	= "09"
COLOR_APPS_3	= "13"

PREFIX		= "%b{%sitename} :: "
SPLITTER	= ", "
KB		= "KB/s"
MB		= "MB/s"
KBIT		= "Kbit/s"
MBIT		= "Mbit/s"
fakesection.INVITE = "iNViTE"

# output done by glftpd
announce.DEBUG	 				= "[%b{debug }] %msg"
announce.DEFAULT 				= "[%b{info  }] %msg"
announce.NEWDIR					= "[%b{new   }][%section] %b{%relname} by %b{%u_name} of %g_name."
announce.DELDIR					= "[%b{delete}][%section] %b{%relname} by %b{%u_name} of %g_name."
announce.LOGIN					= "[%b{login }] %b{%u_name}@%g_name has logged in."
announce.LOGOUT					= "[%b{logout}] %b{%u_name}@%g_name has logged out."
announce.TIMEOUT				= "[%b{logout}] %b{%u_name} has timed out after %b{%u_idletime}s."
announce.TAGLINE				= "[%b{tag   }] %b{%u_name}@%g_name has changed tagline to %b{%u_tagline}."
announce.WIPE					= "[%b{wipe  }][%section] %b{%relname} by %b{%u_name} of %g_name."
announce.WIPE-r					= "[%b{wipe-r}][%section] %b{%relname} and all subdirectories by %b{%u_name} of %g_name."
announce.FAILLOGIN				= "[%b{login }] %b{%failed_nick} failed login: %b{%word1 %word2}"
announce.IPNOTADDED				= "[%b{login }] denied unknown connection from %b{%u_hostmask}."
announce.BADUSERHOST				= "[%b{login }] failed login %b{%u_name} hostmask %b{%u_hostmask} not added."
announce.BADPASSWD				= "[%b{login }] failed login %b{%u_name} wrong password."

# special announces done by glftpd
announce.NUKE					= "[%b{nuke  }][%section] %b{%relname} factor %b{%multiplier} by %b{%nuker} [reason] %b{%reason} [nukees] %b{%nukees}."
announce.UNNUKE					= "[%b{unnuke}][%section] %b{%relname} factor %b{%multiplier} by %b{%nuker} [reason] %b{%reason} [nukees] %b{%nukees}."
announce.NUKEES					= "%b{%u_name} (%b{%size}MB)"

# special output done by the zipscript
announce.DOUBLESFV				= "[%b{notice}] %b{%u_name} of %g_name tried to upload a dupe sfv."
announce.BADBITRATE				= "[%b{notice}] %b{%u_name} of %g_name is violating rules by uploading shit with bitrate %b{%bitrate}kbps."
announce.BADGENRE				= "[%b{notice}] %b{%u_name} of %g_name is violating rules by uploading %b{%genre}."
announce.BADYEAR				= "[%b{notice}] %b{%u_name} of %g_name is violating rules by uploading shit from %b{%year}."
announce.BAD_FILE_CRC				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (crc-mismatch) in %b{%releasename}."
announce.BAD_FILE_0SIZE				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (0-sized file) in %b{%releasename}."
announce.BAD_FILE_ZIP				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (zip integrity failed) in %b{%releasename}."
announce.BAD_FILE_WRONGDIR			= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (wrong dir) in %b{%releasename}."
announce.BAD_FILE_SFV				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (sfv with errors) in %b{%releasename}."
announce.BAD_FILE_NOSFV				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (no sfv uploaded yet) in %b{%releasename}."
announce.BAD_FILE_GENRE				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (banned genre) in %b{%releasename}."
announce.BAD_FILE_YEAR				= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (banned year) in %b{%releasename}."
announce.BAD_FILE_BITRATE			= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (banned bitrate) in %b{%releasename}."
announce.BAD_FILE_DISALLOWED			= "[%b{notice}] %b{%u_name} of %g_name uploaded a bad file (filetype not allowed) in %b{%releasename}."

# some special loop variables - these format the racers and stats for each racer in the corresponding output.
announce.RACE_ZIP_LOOP1				= "%b{%a_name}/%a_gname%splitter"
announce.RACE_ZIP_LOOP2				= "%b{%r_name}/%r_gname%splitter"
announce.RACE_RAR_LOOP1				= "%b{%a_name}/%a_gname%splitter"
announce.RACE_RAR_LOOP2				= "%b{%r_name}/%r_gname%splitter"
announce.RACE_OTHER_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.RACE_OTHER_LOOP2			= "%b{%r_name}/%r_gname%splitter"
announce.RACE_VIDEO_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.RACE_VIDEO_LOOP2			= "%b{%r_name}/%r_gname%splitter"
announce.RACE_AUDIO_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.RACE_AUDIO_LOOP2			= "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_RAR_LOOP1			= "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_ZIP_LOOP1			= "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_OTHER_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_VIDEO_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.HALFWAY_RACE_AUDIO_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.NEWLEADER_RAR_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_ZIP_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_OTHER_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_VIDEO_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.NEWLEADER_AUDIO_LOOP1			= "%b{%a_name}/%a_gname%splitter"
announce.COMPLETE_STAT_RACE_RAR_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_RAR_LOOP2		= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_RAR_LOOP3		= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"
announce.COMPLETE_STAT_RACE_ZIP_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_ZIP_LOOP2		= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_ZIP_LOOP3		= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"
announce.COMPLETE_STAT_RACE_OTHER_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_OTHER_LOOP2		= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_OTHER_LOOP3		= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP1		= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP2		= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_VIDEO_LOOP3		= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"
announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP1	= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP2	= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_AUDIO_CBR_LOOP3	= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP1	= "%b{%r_name}/%r_gname%splitter"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP2	= "|%b{%sitename} :: [%b{stats }][%section] %g_racer_position %b{%g_racer_name} :: %b{%g_racer_files}f :: %b{%g_racer_mbytes}MB :: %b{%g_racer_percent}% :: %b{%g_racer_avgspeed}"
announce.COMPLETE_STAT_RACE_AUDIO_VBR_LOOP3	= "|%b{%sitename} :: [%b{stats }][%section] %u_racer_position %b{%u_racer_name} of %g_racer_name :: %b{%u_racer_files}f :: %b{%u_racer_mbytes}MB :: %b{%u_racer_percent}% :: %b{%u_racer_avgspeed} :: wkup %b{%u_racer_wkup}"

# standard announces done by the zipscript
announce.RACE_ZIP				= "[%b{racer }][%section] %b{%reldir} :: %b{%u_name} is racing %loop1 at %b{%u_speed}."
announce.RACE_RAR				= "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %b{%u_speed}."
announce.RACE_OTHER				= "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %b{%u_speed}."
announce.RACE_VIDEO				= "[%b{racer }][%section] %b{%relname} :: %b{%u_name} is racing %loop1 at %b{%u_speed}."
announce.RACE_AUDIO				= "[%b{racer }][%section] %b{%reldir} :: %b{%u_name} is racing %loop1 at %b{%u_speed}."
announce.SFV_RAR				= "[%b{sfv   }][%section] %b{%relname} by %b{%u_name} of %g_name :: now expecting %b{%t_filecount} file(s)."
announce.SFV_OTHER				= "[%b{sfv   }][%section] %b{%relname} by %b{%u_name} of %g_name :: now expecting %b{%t_filecount} file(s)."
announce.SFV_VIDEO				= "[%b{sfv   }][%section] %b{%relname} by %b{%u_name} of %g_name :: now expecting %b{%t_filecount} file(s)."
announce.SFV_AUDIO				= "[%b{sfv   }][%section] %b{%reldir} by %b{%u_name} of %g_name :: now expecting %b{%t_filecount} file(s)."
announce.UPDATE_RAR				= "[%b{update}][%section] %b{%relname} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Now expecting %b{%t_mbytes}MB."
announce.UPDATE_ZIP				= "[%b{update}][%section] %b{%reldir} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Now expecting %b{%t_mbytes}MB."
announce.UPDATE_OTHER				= "[%b{update}][%section] %b{%relname} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Now expecting %b{%t_mbytes}MB."
announce.UPDATE_VIDEO				= "[%b{update}][%section] %b{%relname} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Now expecting %b{%t_mbytes}MB."
announce.UPDATE_CBR				= "[%b{update}][%section] %b{%reldir} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Get ready for some %b{%genre} from %b{%year} at %b{%sampling}Hz in %mode %b{%bitrate}kbps (%audio)."
announce.UPDATE_VBR				= "[%b{update}][%section] %b{%reldir} got first file from %b{%u_name} of %g_name at %b{%u_speed}. Get ready for some %b{%genre} from %b{%year} at %b{%sampling}Hz in %mode %b{%bitrate}kbps (%audio %a_stream)."
announce.HALFWAY_NORACE_RAR			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %b{%u_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_NORACE_ZIP			= "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %b{%u_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_NORACE_OTHER			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %b{%u_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_NORACE_VIDEO			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %b{%u_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_NORACE_AUDIO			= "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} is all alone and halfway at %b{%u_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_RACE_RAR			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed} against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}MB) at %b{%g_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_RACE_ZIP			= "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed} against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}MB) at %b{%g_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_RACE_OTHER			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed} against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}MB) at %b{%g_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_RACE_VIDEO			= "[%b{50%   }][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed} against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}MB) at %b{%g_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.HALFWAY_RACE_AUDIO			= "[%b{50%   }][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} leads with %b{%u_leader_files} files in %b{%u_leader_percent%} (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed} against %loop1 :: group %b{%g_leader_name} leads with %b{%g_leader_files} files in %b{%g_leader_percent}% (%b{%g_leader_mbytes}MB) at %b{%g_leader_avgspeed}. Estimated time left: %b{%t_timeleft}."
announce.NEWLEADER_RAR				= "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed}. Runners up are %loop1. Estimated time left: %b{%t_timeleft}."
announce.NEWLEADER_ZIP				= "[%b{leader}][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed}. Runners up are %loop1. Estimated time left: %b{%t_timeleft}."
announce.NEWLEADER_OTHER			= "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed}. Runners up are %loop1. Estimated time left: %b{%t_timeleft}."
announce.NEWLEADER_VIDEO			= "[%b{leader}][%section] %b{%relname} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed}. Runners up are %loop1. Estimated time left: %b{%t_timeleft}."
announce.NEWLEADER_AUDIO			= "[%b{leader}][%section] %b{%reldir} :: %b{%u_leader_name} of %b{%u_leader_gname} takes the lead with %b{%u_leader_files} files in %b{%u_leader_percent}% (%b{%u_leader_mbytes}MB) at %b{%u_leader_avgspeed}. Runners up are %loop1. Estimated time left: %b{%t_timeleft}."
announce.COMPLETE_RAR				= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_ZIP				= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_OTHER				= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_VIDEO				= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_AUDIO_CBR			= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_AUDIO_VBR			= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%r_avgspeed}) by %b{%u_name} of %b{%g_name}."
announce.COMPLETE_STAT_RACE_RAR			= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"
announce.COMPLETE_STAT_RACE_ZIP			= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"
announce.COMPLETE_STAT_RACE_OTHER		= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"
announce.COMPLETE_STAT_RACE_VIDEO		= "[%b{done  }][%section] %b{%relname} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"
announce.COMPLETE_STAT_RACE_AUDIO_CBR		= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"
announce.COMPLETE_STAT_RACE_AUDIO_VBR		= "[%b{done  }][%section] %b{%reldir} with %b{%t_files} files (%b{%t_mbytes}MB) was completed in %b{%t_duration} (avg. %b{%t_avgspeed}) by %b{%u_count} user(s) in %b{%g_count} group(s).|%b{%sitename} :: [%b{stats }][%section] Users hall of fame:%loop3|%b{%sitename} :: [%b{stats }][%section] Groups hall of fame:%loop2"

# Announce done by the postdel binary
announce.INCOMPLETE				= "[%b{d0h!  }][%section] %b{%releasename} is now incomplete thanks to %b{%u_name} of %b{%g_name}."

# 3rd party addons - take note that these variables should possibly be changed in order to work with your setup/3rd party app.
announce.PRE					= "[%b{%c1{pre}   }][%section] %b{%relname} by %b{%pregroup} in %b{%files} files (%b{%mbytes}MB)."
announce.INVITE					= "[%b{invite}] %b{%u_name} of %g_name invited himself as %b{%u_ircnick}."
announce.REQUEST				= "[%b{req   }] %b{%u_name} of %g_name requests %b{%releasename}."
announce.REQFILLED				= "[%b{filled}] %b{%u_name} of %g_name just filled %b{%releasename} for %b{%u_requester}."

# internal announces
announce.LEECH					= "[%b{bwinfo}] Current leechers:"
announce.UPLOAD					= "[%b{bwinfo}] Current uploaders:"
announce.IDLE					= "[%b{bwinfo}] Current idlers:"
announce.BW				        = "[%b{bwinfo}] %b{%uploads} up at %b{%upspeed} (%uppercent%) :: %b{%downloads} down at %b{%dnspeed} (%dnpercent%) %b{%transfers} in total at %b{%totalspeed} (%totalpercent%) :: %b{%active} browsing :: %b{%idlers} idle :: %b{%totallogins} out of %b{%maxusers} in total."
announce.BWUP					= "[%b{bwinfo}] %b{%uploads} uploads @ %b{%upspeed} (%uppercent%)."
announce.BWDN					= "[%b{bwinfo}] %b{%downloads} downloads @ %b{%dnspeed} (%dnpercent%)."
announce.TOTUPDN				= "[%b{bwinfo}] %type %b{%count} at %b{%total} (%b{%per}%)."
announce.TOTIDLE				= "[%b{bwinfo}] Currently %b{%count} users idle!"
announce.USERIDLE				= "[%b{bwinfo}] %b{%u_name} of %g_name at %b{%idletime}s."
announce.USER					= "[%b{bwinfo}] %b{%u_name} of %g_name on %b{%filename} (%b{%fper} done) at %b{%uspeed} (%b{%per} usage)."
announce.SPEEDUP				= "[%b{bwinfo}] %b{%u_name} of %g_name is uploading %b{%f_name} at %b{%upspeed} (%uppercent)."
announce.SPEEDDN				= "[%b{bwinfo}] %b{%u_name} of %g_name is downloading %b{%f_name} at %b{%dnspeed} (%dnpercent)."
announce.SPEEDID				= "[%b{bwinfo}] %b{%u_name} of %g_name has been idle for %b{%idletime}."
announce.SPEEDERROR				= "[%b{bwinfo}] Nope, try again. Found noone by that name on site."
announce.WELCOME				= "Welcome to %b{%sitename}'s sitechan. Type %cmdprehelp for help."
announce.FREE					= "[%b{space }] %devices[Totals: %b{%free} of %b{%total} (used %percentage%)]."
announce.FREE-DEV				= "%section: %b{%free} of %b{%total} (used %percentage%) :: "

# 3rd party imdb announce - example for psxc-imdb
announce.IMDBVAR				= "[%b{imdb  }][%section] %b{%imdbname} (%imdburl), a %imdbdirector movie which scored %b{%imdbscore of 10} (%imdbvotes people voted). It premiered in %imdbpremiereinfo, with %b{%imdbnumscreens screens} on the opening weekend.|%b{%sitename} :: [%b{imdb  }][%section] %b{%imdbname} plot summary: %imdbplot \[%imdbbar\]"
announce.IMDB					= "%msg"
announce.IMDBFIND				= "%msg"
announce.MSGINVITE	        		= "[%b{invite}] %b{%u_name} of %g_name invited himself as %b{%u_ircnick}."
announce.BADMSGINVITE	        		= "[%b{%c1{badinv}}] %b{%u_ircnick} (%u_host) tried to invite himself with invalid login!"

# Example of custom announces (see dZSbconf.tcl for info on how to enable)
#announce.SAMPLE 				= "[%b{sample}][%section] %b{%relname} by %b{%u_name} of %g_name."
#announce.NEWCD					= "[%b{cd    }][%section] %b{%relname} by %b{%u_name} of %g_name."
#announce.NEWDISC				= "[%b{disc  }][%section] %b{%relname} by %b{%u_name} of %g_name."
#announce.SUBTITLES				= "[%b{subs  }][%section] %b{%relname} by %b{%u_name} of %g_name."
#announce.COVERS 				= "[%b{covers}][%section] %b{%relname} by %b{%u_name} of %g_name."

# Entries for commands done by neoxed (!new/!search/!nukes/!unnukes)

announce.NEW					= "%b{(NEW)} Latest Releases In: %b{%section}"
announce.NEW_BODY				= "%b{-} %num. %path/%b{%reldir} by %b{%u_name}/%g_name (%b{%files}F/%b{%mbytes}MB/%age)"
announce.NEW_NONE				= "%b{-} No releases found."

announce.SEARCH					= "%b{(SEARCH)} Searching for: %pattern"
announce.SEARCH_BODY				= "%b{-} %num. %path/%b{%reldir} (%b{%files}F/%b{%mbytes}MB/%age)"
announce.SEARCH_NONE				= "%b{-} No matching results found."

announce.NUKES					= "%b{(NUKES)} Latest Nukes In: %b{%section}"
announce.NUKES_BODY				= "%b{-} %num. %date %b{%reldir} was nuked %b{%multiplier}x by %b{%nuker}. Reason: %b{%reason}"
announce.NUKES_NONE				= "%b{-} No nukes found."

announce.UNNUKES				= "%b{(UNNUKES)} Latest Unnukes In: %b{%section}"
announce.UNNUKES_BODY				= "%b{-} %num. %date %b{%reldir} was unnuked %b{%multiplier}x by %b{%unnuker}. Reason: %b{%reason}"
announce.UNNUKES_NONE				= "%b{-} No unnukes found."


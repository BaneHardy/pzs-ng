/* zsconfig.h - ZipScript-C config file
 *
 * Please do not change settings you dont understand!
 *
 * READ THE COOKIE FILE FIRST! DO NOT EDIT IN WINDOWS!
 */



/*
 *      General Settings
 *      ================
 */

/* These should be changed to match your glftpd installation. */
#define log             "/ftp-data/logs/glftpd.log"
#define storage         "/ftp-data/pzs-ng/"
#define gl_userfiles    "/ftp-data/users/"
#define dupepath        "/ftp-data/logs/dupefile"
#define gl_sections     "DEFAULT"

/* Per default, announcing is disabled everywhere, use zip/sfv paths to enable announces and private paths to disable.
 * Don't be lazy! Be specific! And remember - pathnames are case sensitive.
 */
#define group_dirs                      "/site/groups/"
#define zip_dirs                        "/site/test/ /site/incoming/0day/"
#define sfv_dirs                        "/site/test/ /site/incoming/mp3/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/requests/"
#define nocheck_dirs                    "/site/private/"
#define audio_nocheck_dirs              "/site/groups/ /site/incoming/requests/"
#define allowed_types_exemption_dirs    "/site/incoming/musicvideos/"

#define GROUPFILE       "/etc/group"
#define PASSWDFILE      "/etc/passwd"

/* Directories for cleanup to check for broken incomplete files
 * Use same % values as with date
 */
#define check_today             TRUE
#define check_yesterday         TRUE

#define cleanupdirs     "/site/test/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/0day/%m%d/ /site/incoming/mp3/%m%d/"

/* Should an incomplete pointer be put instead of the incomplete-pointer if nfo's are missing after release is complete? */
#define show_missing_nfo	TRUE

/* Do not write .message file on complete in group_dirs */
#define write_complete_message_in_group_dirs    TRUE

/* Hide name of uploaders in the .message-file in group-dirs? Setting this
 * to TRUE will convert the username to the groupname of the user.
 */
#define hide_group_uploaders    TRUE

/* You may also choose a custom message to be put into the .message file in
 * the group dirs. Define your message here, or put DISABLED to disable.
 */
#define custom_group_dirs_complete_message      "... Looks like this is a pre. :)"

/* Creates a zero-byte file for every non-existing file defined in sfv? */
#define create_missing_files    TRUE

/* Defines type of status bar
 * 0 = file
 * 1 = directory
 */
#define status_bar_type         1

/* Defines type of incomplete pointer
 * 0 = file
 * 1 = symbolic link
 */
#define incompleteislink        1

/* Defines symbolic link type
 * 0 = absolute path
 * 1 = relative path
 */
#define userellink              1


/* If file has suid bit set, program changes uid and gid to these (0 leaves option uncompiled) */
#define program_uid             0
#define program_gid             0

/* These file types are allowed without any checks */
#define allowed_types           "jpg,cue,m3u,mpg,avi,nfo,txt"

/* These file types are ignored from sfv
 * NOTE: , at the beginning ignores all files without extensions
 */
#define ignored_types           ",diz,jpg,cue,m3u,nfo,sfv,debug"

/* Special modes */
#define debug_mode              TRUE
#define benchmark_mode          TRUE

/*
 *      SFV Settings
 *      ============
 */

/* Removes duplicate entries and comments from the sfv - some lame zipscripts seem to add duplicate entries :p */
#define sfv_dupecheck           TRUE

/* Writes a plain sfv - removing all comments etc */
#define sfv_cleanup             TRUE

/* Should new sfv files be denied in dir? If not, the new sfv will be checked and denied/allowed depending on the
 * content of the sfv.
 */
#define deny_double_sfv         FALSE

/* Exclude non sfv directories (ie group/request directory) */
#define exclude_non_sfv_dirs    TRUE

/* Force sfv to be uploaded first, before accepting any files */
#define force_sfv_first         FALSE


/*
 *      MP3 Settings
 *      ============
 */

/* These directories will contain symlinks to your audio releases, based on genre, year and artist.
 * Ignore these paths if you have no plans on sorting your releases.
 */
#define audio_genre_path                "/site/incoming/music.by.genre/"
#define audio_artist_path               "/site/incoming/music.by.artist/"
#define audio_year_path                 "/site/incoming/music.by.year/"
#define audio_group_path                "/site/incoming/music.by.group/"

/* It is a good idea to prevent crap from filling your hds.
 * Ignore these settings if you do not plan to restrict your uploads.
 */
#define allowed_constant_bitrates       "160,192"
#define allowed_years                   "2000,2001,2002,2003,2004,2005"
#define banned_genres                   "Christian Rap"
#define allowed_genres                  "Rock"

/* Audio related symlinks - set to TRUE if you wish to sort/symlink releases, or FALSE if not. */
#define audio_genre_sort                TRUE
#define audio_year_sort                 FALSE
#define audio_artist_sort               TRUE
#define audio_group_sort                TRUE

/* Audio related checks for quality/type - here you enable/disable the restriction you defined earlier.
 * If warn is true, any banned files will not be deleted, but instead a warning message will be logged
 * to your glftpd.log.
 */
#define audio_cbr_check                 TRUE
#define audio_cbr_warn                  TRUE
#define audio_year_check                TRUE
#define audio_year_warn                 TRUE

/* either "audio_banned_genre_check" or "audio_allowed_genre_check" should be set to TRUE */
#define audio_banned_genre_check        TRUE
#define audio_allowed_genre_check       TRUE
#define audio_genre_warn                TRUE

/* Create m3u file on release complete for audio release? */
#define create_m3u                      TRUE


/*
 *      Race Settings
 *      =============
 *      NOTE: You may disable announces by typing DISABLED instead of cookie string
 *      (do not use DISABLED with message etc files!!!)
 */

/* New leader needs this number of files more than current leader to be counted as "newleader"
 * (reduces "spam" in channel)
 */
#define enable_files_ahead      TRUE
#define newleader_files_ahead   2

/* If minium is not reached - announcement will be disabled. The number entered represents
 * the minimum number of files in the release.
 */
#define min_newleader_files     1
#define min_update_files        1
#define min_halfway_files       10

/* Limit number of users/groups to display in stats. */
#define max_users_in_top        7
#define max_groups_in_top       7


/* Enable/disable norace announces (will be used instead of normal announces, if there is only one user in race) */
#define announce_norace         TRUE

/* Defines how stats are written into log
 * 0 = complete msg only
 * 1 = n line mode (complete, pre_stats, user top, between stats, group top, post stats)
 */
#define zip_complete_type               0
#define zip_norace_complete_type        0
#define rar_complete_type               1
#define rar_norace_complete_type        0
#define audio_complete_type             1
#define audio_norace_complete_type      0
#define video_complete_type             1
#define video_norace_complete_type      0
#define other_complete_type             1
#define other_norace_complete_type      0


/* Get list of competitors (all racers excluding current user) - stored in %R cookie */
#define get_competitor_list     TRUE

/*
 *      Output variables used on site (.message file)
 *      =============================================
 */

/* Write .message file on complete */
#define write_complete_message  TRUE

/* What the .message file should be called */
#define message_file_name       ".message"

/* Various Output */
#define message_header          ""
#define message_user_header     "\n                           U S E R T O P\n" \
    "+--------------------------------------------------------------------+\n"
#define message_user_body       "%3n %-34U %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#define message_user_footer     "+--------------------------------------------------------------------+\n" \
    "%3u Total %36.1mM %3fF 100.0%% %5.0aKBs\n"

#define message_group_header    "\n\n                          G R O U P T O P\n" \
    "+--------------------------------------------------------------------+\n"
#define message_group_body      "%3n %-34g %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#define message_group_footer    "+--------------------------------------------------------------------+\n" \
    "%3g Total %36.1mM %3fF 100.0%% %5.0aKBs\n"

#define message_mp3             "\n\n                            I D 3 - T A G\n" \
    "+--------------------------------------------------------------------+\n" \
"  Artist : %x\n" \
"  Album  : %W\n" \
"  Genre  : %-34w Rate  : %Xkbit/sec\n" \
"  Tracks : %-34f Year  : %Y\n" \
"  Encoder: %-34i Preset: %I\n" \
"+--------------------------------------------------------------------+\n"
#define message_footer          ""

#define video_completebar       "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#define audio_completebar       "[dS] - ( %.0mM %fF - COMPLETE - %w %Y ) - [dS]"
#define rar_completebar         "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#define other_completebar       "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#define zip_completebar         "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#define del_completebar         "\\[dS] - \\( .*F - COMPLETE.*) - \\[dS]"


#define zipscript_header         ".----=== ZipScript-C ===--,d1'--=== (C) 2004 ===---.\n"
#define zipscript_sfv_ok         "| + SFV-file: oK!                                  |\n"
#define zipscript_any_ok         "| + File: ok!                                      |\n"
#define zipscript_SFV_ok         "| + CRC-Check: oK!                                 |\n"
#define zipscript_SFV_skip       "| + CRC-Check: SKIPPED!                            |\n"
#define zipscript_zip_ok         "| + ZiP integrity: oK!                             |\n"
#define realtime_mp3_info        "+-=[ID3tag]=------------------------===------------+\n" \
    "| Title  : %-39y |\n" \
"| Artist : %-39x |\n" \
"| Album  : %-39W |\n" \
"| Genre  : %-39w |\n" \
"| Year   : %-39Y |\n"
#define realtime_user_header     "+-=[UserTop]=-------------------===----------------+\n"
#define realtime_user_body       "| %2n. %-17u %8.1mmB %2fF %7.0skB/s |\n"
#define realtime_user_footer     ""
#define realtime_group_header    "+-=[GroupTop]=--------------------===--------------+\n"
#define realtime_group_body      "| %2n. %-17g %8.1mmB %2fF %7.0skB/s |\n"
#define realtime_group_footer    ""
#define zipscript_footer_unknown "`-[ - NO - SFV - ]------------------------[%2F/??]--'\n"
#define zipscript_footer_ok      "`-[%V]------------------------[%2F/%-2f]--'\n"
#define zipscript_footer_error   "| - %-46v |\n" \
    "`-----------------------------------========-------'\n"
#define zipscript_footer_skip    "`--------------------------------=====-------------'\n"

/* How Indicators look */
#define incomplete_cd_indicator         "../../(incomplete)-(%0)-%1"
#define incomplete_indicator            "../(incomplete)-%0"
#define incomplete_nfo_indicator	"../(no-nfo)-%0"

#define progressmeter                   "[%V] - %3.0p%% Complete - [dS]"
#define del_progressmeter               "\\[.*] - ...% Complete - \\[dS]"


/*
 *      Various settings
 *      ================
 */

/* Enable/disable accept script (accept script is run, if file is ok) */
#define enable_accept_script    FALSE
#define accept_script           "/bin/imdb_parse.sh"

/* Enable/disable nfo script (only run on .nfo files) */
#define enable_nfo_script       FALSE
#define nfo_script              "/bin/psxc-imdb.sh"

/* Enable/disable complete script (complete script is run, if release is complete) */
#define enable_complete_script  FALSE
#define complete_script         "/bin/nfo_copy.sh"

/* Enable/disable mp3 script (run only once, after first mp3-file is uploaded) */
#define enable_mp3_script       FALSE
#define mp3_script              "/bin/mp3-genres.sh"
#define mp3_script_cookies      "\"%w\" \"%W\" \"%x\" \"%X\" \"%y\" \"%Y\" \"%z\" \"%h\" \"%q\" \"%Q\" \"%j\" \"%i\" \"%I\""

/* Enable/disable unduper script (runs if sfv is uploaded after files, and files
 *                                are marked as bad and deleted)
 */
#define enable_unduper_script   TRUE
#define unduper_script          "/bin/ng-undupe"


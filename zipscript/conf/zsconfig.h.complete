/*
 * 
 * This file contains all settings, and it's default values.
 * A complete list of settings, with comments
 * can be found in README.ZSCONFIG
 */
/*
 * General Settings
 * ================
 */
/*
 * These should be changed to match your glftpd installation. All pathnames
 * must end with a slash ( / ) All paths are chroot'ed.
 * log - /path/name of your glftpd.log
 * storage - place where the zipscript stores racedata.  Should not be
 * accessible to your site's users.
 * gl_userfiles - path to glftpd's dir with userfiles.
 * dupepath - /path/name to glftpd's dupefile.
 * gl_section - names of sections defined in glftpd.conf
 */
#define sitepath_dir	"/site/"
#define log		"/ftp-data/logs/glftpd.log"
#define storage		"/ftp-data/pzs-ng/"
#define gl_userfiles	"/ftp-data/users/"
#define dupepath	"/ftp-data/logs/dupefile"
#define gl_sections	"DEFAULT"
/*
 * Per default, announcing is disabled everywhere, use zip/sfv paths to
 * enable announces and private paths to disable. Don't be lazy! Be specific!
 * And remember - pathnames are case sensitive. All pathnames must end with a
 * slash ( / ) All paths are chroot'ed.
 * group_dirs - paths where announcing should be turned off.
 * zip_dirs - paths where zipfiles normally are uploaded.
 * sfv_dirs - paths where sfv-releases normally are uploaded.
 * nocheck_dirs - paths where no checking of files occur at all. This overrides
 * zip/sfv/group-dirs.
 * spaces_to_dots - replaces spaces to dots in audio genre dirs.
 * audio_nocheck_dirs - paths where mp3 files are not checked for genre,
 * bitrate etc.
 * allowed_types_exemption_dirs - paths where certain files are not
 * checked/denied if no sfv-file is uploaded.
 * check_for_missing_nfo_dirs - these dirs will be checked for missing nfo's
 * after a release is complete.
 */
#define group_dirs			"/site/groups/"
#define zip_dirs			"/site/test/ /site/incoming/0day/"
#define sfv_dirs			"/site/test/ /site/incoming/mp3/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/requests/"
#define nocheck_dirs			"/site/private/"
#define speedtest_dirs			"/site/speedtest/"
#define speedtest_delfile		FALSE
#define noforce_sfv_first_dirs		"/site/incoming/requests/"
#define use_partial_on_noforce		FALSE
#define rescan_nocheck_dirs_allowed	TRUE
#define rescan_default_to_quick		TRUE
#define spaces_to_dots			FALSE
#define audio_nocheck_dirs		"/site/groups/ /site/incoming/requests/"
#define allowed_types_exemption_dirs	"/site/incoming/musicvideos/"
#define check_for_missing_nfo_dirs	"/site/incoming/games/ /site/incoming/apps/"
#define create_missing_sfv_link         TRUE
#define create_incomplete_links_in_group_dirs	TRUE
/*
 * Normally rar files are allowed in zip dirs and vice versa. Setting the
 * strict mode on refuses any such mismatch.
 */
#define strict_path_match		FALSE
/*
 * Normally files marked as bad are deleted. You can change this by setting the
 * following value to TRUE - instead of the file being deleted, it will be renamed
 * <filename>.bad. Bad files are ignored on rescan.
 */
#define mark_file_as_bad		FALSE
/*
 * Broken transfers may be a problem on some sites. Glftpd2 and pzs-ng allow you
 * to resume such files by setting this to TRUE.
 */
#define allow_file_resume		FALSE
/*
 * Whenever a bad file is encountered, you can add a delay for the user between
 * 1 and 1000 seconds. Put the number of seconds glftpd should sleep. Setting
 * this to 0 ( or >1000) will disable this feature.
 */
#define sleep_on_bad			0
/*
 * Certain files are needed to change uid/gid to real names. All paths are
 * chroot'ed.
 * GROUPFILE - /path/name of glftpd's group file
 * PASSWDFILE - /path/name of glftpd's passwd file
 */
#define GROUPFILE	"/etc/group"
#define PASSWDFILE	"/etc/passwd"
/*
 * You can use a cookie for sitename, short version. This will be used in
 * incompletebars, completebars etc.
 */
#define short_sitename	"NG"
/*
 * Here is a list of subdirs (not case sensitive). Use ? as wildcard.
 */
#define subdir_list	"cd??,disc??,disk??,dvd??,extra?,sub?,subtitle?,vobsub?,sample?,subpack?"
/*
 * Directories for cleanup to check for broken incomplete files. Used by the
 * cleanup binary (which should be run in crontab) to remove stale links. Use
 * %m for month and %d for day in dated dirs. All paths are chroot'ed.
 * days_back_cleanup - how many days should cleanup go? 1=today, 0=disabled.
 * cleanupdirs - paths to be checked for broken links - these are not recursive.
 * cleanupdirs_dated - path with dated dirs.
 * This has also effect on the incomplete-list.sh script added in the archive.
 * If you use this on your bot, make sure to fill in correct paths.
 */
#define days_back_cleanup	2
#define cleanupdirs		"/site/test/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/"
#define cleanupdirs_dated	"/site/incoming/0day/%m%d/ /site/incoming/mp3/%m%d/"
#define always_scan_audio_syms	FALSE
/*
 * Write .message file on complete in group_dirs?
 */
#define write_complete_message_in_group_dirs	TRUE
/*
 * Hide name of uploaders in the .message-file in group-dirs? Setting this to
 * TRUE will convert the username to the groupname of the user.
 */
#define hide_group_uploaders	TRUE
#define hide_gname		""
#define hide_uname		""
/*
 * You may also choose a custom message to be put into the .message file in
 * the group dirs. Define your message here, or put DISABLED to disable.
 */
#define custom_group_dirs_complete_message	"... Looks like this is a pre. :)\n"
/*
 * Creates a zero-byte file for every non-existing file defined in sfv?
 */
#define create_missing_files	TRUE
/*
 * Defines type of status bar (see below for the format of the status bar)
 * 0 = file
 * 1 = directory
 */
#define status_bar_type		1
/*
 * Defines type of incomplete pointer (see below for the format of the
 * incomplete pointer)
 * 0 = file
 * 1 = symbolic link
 */
#define incompleteislink	1
/*
 * Defines symbolic link type on incomplete and no-nfo indicators.
 * 0 = absolute path
 * 1 = relative path
 */
#define userellink		1
/*
 * If file has suid bit set, program changes uid and gid to these (0 leaves
 * option uncompiled)
 */
#define program_uid		0
#define program_gid		0
/*
 * These file types are allowed without any checks
 */
#define allowed_types		"jpg,cue,m3u,mpg,mpeg,avi,txt,mov,vob"
/*
 * These file types are ignored from sfv NOTE: , at the beginning ignores all
 * files without extensions
 */
#define ignored_types		",diz,debug,message,imdb,html,url"
/*
 * Should we allow files uploaded that is not in the sfv? This is only valid
 * on upload (not rescan etc), and is normally not used.
 */
#define allow_files_not_in_sfv	FALSE
/*
 * Whenever "bad" entries are found in the sfv, they are usually ignored.
 * Setting this settingto true will mark the entire sfv as bad if such entries
 * are found, forcing the user to upload a valid sfv file.
 */
#define strict_sfv_check	FALSE
/*
 * Special modes
 * debug_mode - create .debug files in releasedirs.
 * debug_altlog - put all .debug files in the mirror stored in the storage
 * variable. Not reccommended with first use, as not all debug info will make
 * it into that file. But might be good on a prolonged debug period on a
 * "live" site.
 * benchmark_mode - output to the user uploading how long it took to run the
 * zipscript.
 * ignore_zero_size - will allow (seemingly) zero sized file uploads.
 * ignore_zero_size_on_rescan - will ignore (seemingly) zero sized files on
 * rescan (to be used with *allowed/approved* type files).
 */
#define debug_mode		FALSE
#define debug_altlog		TRUE
#define debug_announce		FALSE
#define benchmark_mode		TRUE
#define ignore_zero_size	FALSE
#define ignore_zero_sized_on_rescan	FALSE
/*
 * Set this to TRUE if you wish to remove the .debug when removing a dir
 * completely. This should let users be able to delete a dir w/o access to
 * the 'wipe' command.
 */
#define remove_dot_debug_on_delete	TRUE
/*
 * Set this to TRUE if you'd like to remove all hidden files (files starting
 * with a dot (''.'')) when you remove all files of the release.
 */
#define remove_dot_files_on_delete	FALSE
/*
 * ZIP Settings ============
 */
/*
 * Enter the (chroot'ed) path/name of unzip. This is used to test integrity
 * of zipfiles.
 * NOTE: You need the unzip bin in order to test zip-files
 */
#define unzip_bin		"/bin/unzip"
/*
 * If unzip exits with error code 2 (a generic error) - should the file be
 * allowed anyway? There really shouldn't be any errors, so it's recommended
 * to leave this setting to the default FALSE. 
 */
#define allow_error2_in_unzip	FALSE
/*
 * SFV Settings ============
 */
/*
 * Calculate CRC for a filename without CRC in its SFV
 */
#define	sfv_calc_single_fname	FALSE
/*
 * Removes duplicate entries and comments from the sfv - some lame zipscripts
 * seem to add duplicate entries :p
 */
#define sfv_dupecheck		TRUE
/*
 * Writes a plain sfv - removing all comments etc
 */
#define sfv_cleanup		TRUE
/*
 * Also changes the case of the text in the sfv to all lowercase - this in
 * in effect turn winblows mode on. ;)
 */
#define sfv_cleanup_lowercase	TRUE
/*
 * Use windows style linefeeds (<cr><lf>) in the cleaned sfv file
 */
#define sfv_cleanup_crlf	TRUE
/*
 * Allow rewritten files on site - sees certain chars as the same
 */
#define sfv_lenient		TRUE
/*
 * Should new sfv files be denied in dir? If not, the new sfv will be checked
 * and denied/allowed depending on the content of the sfv.
 */
#define deny_double_sfv		FALSE
#define deny_resume_sfv		TRUE
#define deny_double_nfo		FALSE
/*
 * Exclude non sfv directories (ie group/request directory)
 */
#define exclude_non_sfv_dirs	TRUE
/*
 * Force sfv to be uploaded first, before accepting any files
 */
#define force_sfv_first		FALSE
/*
 * MP3 Settings ============
 */
/*
 * These directories will contain symlinks to your audio releases, based on
 * genre, year, artist and releasegroup. Ignore these paths if you have no
 * plans on sorting your releases. All paths are chroot'ed.
 */
#define audio_genre_path	"/site/incoming/music.by.genre/"
#define audio_artist_path	"/site/incoming/music.by.artist/"
#define audio_year_path		"/site/incoming/music.by.year/"
#define audio_group_path	"/site/incoming/music.by.group/"
#define audio_language_path	"/site/incoming/music.by.language/"
/*
 * It is a good idea to prevent crap from filling your hds. Ignore these
 * settings if you do not plan to restrict your uploads.
 */
#define allowed_constant_bitrates	"160,192"
#define allowed_years		"2000,2001,2002,2003,2004,2005"
#define banned_genres		"Christian Rap,Christian Gangsta Rap,Contemporary Christian,Christian Rock"
#define allowed_genres		"Top 40,Pop Funk,Rock,Pop"
/*
 * Audio related symlinks - set to TRUE if you wish to sort/symlink releases,
 * or FALSE if not.
 */
#define audio_genre_sort	FALSE
#define audio_year_sort		FALSE
#define audio_artist_sort	FALSE
#define audio_group_sort	FALSE
#define audio_language_sort	FALSE
/*
 * Wether or not we delete any links
 * with the same name when we try to make
 * a new link. (If we don't, the old link will stay,
 * and making a new one will fail)
 */
/*
 * Audio related checks for quality/type - here you enable/disable the
 * restriction you defined earlier. If warn is true, any banned files will
 * not be deleted, but instead a warning message will be logged to your
 * glftpd.log.
 */
#define audio_cbr_check		TRUE
#define audio_cbr_warn		TRUE
#define audio_year_check	TRUE
#define audio_year_warn		TRUE
/* To be *very* strict, you can choose to remove the entire releasedir if a bad
 * genre/year/whatnot is uploaded.
 */
#define del_banned_release	FALSE
/*
 * either "audio_banned_genre_check" or "audio_allowed_genre_check" should be
 * set to TRUE
 */
#define audio_banned_genre_check	TRUE
#define audio_allowed_genre_check	FALSE
#define audio_genre_warn		TRUE
/*
 * Create m3u file on release complete for audio release?
 */
#define create_m3u			TRUE
/*
 * Race/Announce Settings
 * ======================
 * NOTE: You may disable announces by typing DISABLED instead of cookie string
 * (do not use DISABLED with message etc files!!!)
 */
/*
 * New leader needs this number of files more than current leader to be
 * counted as "newleader" (reduces "spam" in channel)
 */
#define enable_files_ahead	TRUE
#define newleader_files_ahead	2
/*
 * If minium is not reached - announcement will be disabled. The number
 * entered represents the minimum number of files in the release.
 */
#define min_newleader_files	1
#define min_update_files	2
#define min_halfway_files	10
/*
 * If minium is not reached - announcement will be disabled. The number
 * entered represents the minimum number of (estimated) MB in the release.
 */
#define min_newleader_size	10
#define min_update_size		1
#define min_halfway_size	10
/*
 * Limit number of users/groups to display in stats.
 */
#define max_users_in_top	7
#define max_groups_in_top	7
#define show_stats_from_pos2_only	FALSE
/*
 * Enable/disable norace announces (will be used instead of normal announces,
 * if there is only one user in race)
 */
#define announce_norace		TRUE
/*
 * Get list of competitors (all racers excluding current user) - stored in %R
 * cookie
 */
#define get_competitor_list	TRUE
#define get_user_stats		TRUE
#define show_user_info		TRUE
#define show_group_info		TRUE
/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! Below follow a series of settings that use cookies.        !!
 * !! These cookies can be found in the COOKIES file.            !!
 * !! Before you change any of these, make sure you read it.     !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */
/*
 * Output variables used on site (.message file)
 * =============================================
 */
/*
 * Write a file on complete in the releasedir, containing stats/raceinfo.
 */
#define write_complete_message	TRUE
/*
 * What the file should be called.
 */
#define message_file_name	".message"
/*
 * Various Output
 */
#define message_header		".-----------------====---------------------------== PZS-NG v1.0 ===--.\n"
#define message_user_header	"|-=[ U S E R T O P ]=---------------.                                |\n|                                    `-----------------====----------|\n"
#define message_user_body	"| %3n %-29U %7.1mM %4fF %5.1p%% %7.0sKBs |\n"
#define message_user_footer	"|- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |\n| %3u Total %31.1mM %4fF 100.0%% %7.0aKBs |\n"
#define message_group_header	"|                                                                    |\n|-=[ G R O U P T O P ]=-------------.                                |\n|                                    `--------------===--------------|\n"
#define message_group_body	"| %3n %-29g %7.1mM %4fF %5.1p%% %7.0sKBs |\n"
#define message_group_footer	"|- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - |\n| %3g Total %31.1mM %4fF 100.0%% %7.0aKBs |\n"
#define message_mp3		"|                                                                    |\n|-=[ I D 3 - T A G ]=---------------.                                |\n|                                    `-----==-------------===--------|\n| Artist : %-57x |\n| Album  : %-57W |\n| Genre  : %-34w Rate  : %3Xkbit/s      |\n| Tracks : %-34f Year  : %-14Y |\n| Encoder: %-34i Preset: %-14I |\n"
#define message_footer		"`-----================---------------------------==------------------'\n"
#define video_completebar	"[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define audio_completebar	"[%Z] - ( %.0mM %fF - COMPLETE - %w %Y ) - [%Z]"
#define rar_completebar		"[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define other_completebar	"[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define zip_completebar		"[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define del_completebar		"^\\[.*] - \\( .*F - COMPLETE.*) - \\[.*]$"
#define zipscript_header	".-== PZS-NG Zipscript-C ==-------------------------.\n"
#define zipscript_sfv_ok	"| + SFV-file: oK!                                  |\n"
#define zipscript_any_ok	"| + File: ok! (allowed w/o any checks)             |\n"
#define zipscript_SFV_ok	"| + CRC-Check: oK!                                 |\n"
#define zipscript_SFV_skip	"| + CRC-Check: SKIPPED!                            |\n"
#define zipscript_zip_ok	"| + ZiP integrity: oK!                             |\n"
#define realtime_mp3_info	"+-=[ID3tag]=------------------------===------------+\n| Title  : %-39y |\n| Artist : %-39x |\n| Album  : %-39W |\n| Genre  : %-39w |\n| Year   : %-39Y |\n"
#define realtime_user_header	"+-=[UserTop]=-------------------===----------------+\n"
#define realtime_user_body	"| %2n. %-15u %8.1mmB %4fF %7.0skB/s |\n"
#define realtime_user_footer	""
#define realtime_group_header	"+-=[GroupTop]=--------------------===--------------+\n"
#define realtime_group_body	"| %2n. %-15g %8.1mmB %4fF %7.0skB/s |\n"
#define realtime_group_footer	""
#define zipscript_footer_unknown	"`-[ - NO - SFV - ]----------------------[%3F/???]--'\n"
#define zipscript_footer_ok	"`-[%V]----------------------[%3F/%-3f]--'\n"
#define zipscript_footer_error	"| - %-46v |\n`-----------------------------------========-------'\n"
#define zipscript_footer_skip	"`--------------------------------=====-------------'\n"
/*
 * Indicators and progress-meters. ===============================
 */
/*
 * How Indicators look
 * incomplete_cd_indicator = when a multi-cd release is incomplete.
 * incomplete_indicator = when a normal release is incomplete.
 * incomplete_nfo_indicator = when a normal release is missing nfo in the dir.
 * incomplete_base_nfo_indicator = when a multi-cd release is missing nfo in
 * the base dir.
 */
#define incomplete_cd_indicator		"../../(incomplete)-(%0)-%1"
#define incomplete_indicator		"../(incomplete)-%0"
#define incomplete_nfo_indicator	"../(no-nfo)-%0"
#define incomplete_base_nfo_indicator	"../../(no-nfo)-%1"
#define incomplete_sfv_indicator	"../(no-sfv)-%0"
#define incomplete_base_sfv_indicator	"../../(no-sfv)-%1"
#define progressmeter			"[%V] - %3.0p%% Complete - [%Z]"
#define del_progressmeter		"^\\[.*] - .*%% Complete - \\[.*]$"
#define progressmeter_mp3		"[%V] - %3.0p%% Complete - (%w) [%Z]"
#define del_progressmeter_mp3		"^\\[.*] - .*%% Complete - (.*) \\[.*]$"
/*
 * Various settings ================
 */
/*
 * Enable/disable accept script (accept script is run, if file is ok)
 */
#define enable_accept_script	FALSE
#define accept_script		"/bin/imdb_parse.sh"
/*
 * Enable/disable nfo script (only run on .nfo files)
 */
#define enable_nfo_script	FALSE
#define nfo_script		"/bin/psxc-imdb.sh"
/*
 * Enable/disable complete script (complete script is run, if release is
 * complete)
 */
#define enable_complete_script	FALSE
#define complete_script		"/bin/nfo_copy.sh"
/*
 * Enable/disable mp3 script (run only once, after first mp3-file is uploaded)
 */
#define enable_mp3_script	FALSE
#define mp3_script		"/bin/ng-chown"
#define mp3_script_cookies	"0 0 0 1 0 1 - \"%w\" \"%?\""
/*
 * Enable/disable unduper script (runs if sfv is uploaded after files, and
 * files are marked as bad and deleted)
 */
#define enable_unduper_script	TRUE
#define unduper_script		"/bin/ng-undupe"
/*
 * The following settings allow you to disable certain announces. This should
 * probably be done in your bot, but as of this writing, the default dzsbot
 * does not support such an option.
 */
#define disable_audio_race		FALSE
#define disable_audio_sfv		FALSE
#define disable_audio_update		FALSE
#define disable_audio_halfway		FALSE
#define disable_audio_newleader		FALSE
#define disable_audio_complete		FALSE
#define disable_audio_norace_halfway	FALSE
#define disable_audio_norace_complete	FALSE
#define disable_video_race		FALSE
#define disable_video_sfv		FALSE
#define disable_video_update		FALSE
#define disable_video_halfway		FALSE
#define disable_video_newleader		FALSE
#define disable_video_complete		FALSE
#define disable_video_norace_halfway	FALSE
#define disable_video_norace_complete	FALSE
#define disable_rar_race		FALSE
#define disable_rar_sfv			FALSE
#define disable_rar_update		FALSE
#define disable_rar_halfway		FALSE
#define disable_rar_newleader		FALSE
#define disable_rar_complete		FALSE
#define disable_rar_norace_halfway	FALSE
#define disable_rar_norace_complete	FALSE
#define disable_other_race		FALSE
#define disable_other_sfv		FALSE
#define disable_other_update		FALSE
#define disable_other_halfway		FALSE
#define disable_other_newleader		FALSE
#define disable_other_complete		FALSE
#define disable_other_norace_halfway	FALSE
#define disable_other_norace_complete	FALSE
#define disable_zip_race		FALSE
#define disable_zip_sfv			FALSE
#define disable_zip_update		FALSE
#define disable_zip_halfway		FALSE
#define disable_zip_newleader		FALSE
#define disable_zip_complete		FALSE
#define disable_zip_norace_halfway	FALSE
#define disable_zip_norace_complete	FALSE
#define charbar_missing			":"
#define charbar_filled			"#"
#define	chmod_completebar		FALSE
#define mark_empty_dirs_as_incomplete_on_rescan	FALSE
#define max_seconds_wait_for_lock	20
#define lock_optimize			1
#define ignore_lock_timeout		FALSE
/*
 * Some setting used in ng-chown
 * -----------------------------
 */
/* Should we allow the binary to change the uid of files/dirs?
 */
#define allow_uid_change_in_ng_chown	FALSE
/* Should we allow the binary to change the gid of files/dirs?
 */
#define allow_gid_change_in_ng_chown	FALSE
/* Should we allow the binary to chown the files in a dir?
 */
#define allow_files_chown_in_ng_chown	FALSE
/* Should we allow the binary to chown the dir/file itself?
 */
#define allow_dir_chown_in_ng_chown	FALSE
#define change_spaces_to_underscore_in_ng_chown	TRUE
/*
 * Some new settings not yet sorted
 * --------------------------------
 */
#define zip_clean			TRUE
#define extract_nfo			TRUE
#define deny_nfo_upload_in_zip		FALSE
#define test_for_password		TRUE
#define zip_bin				"/bin/zip"
#define banned_filelist			"/ftp-data/misc/banned_filelist.txt"
#define check_for_banned_files		TRUE
#define rescan_chdir_flags		""

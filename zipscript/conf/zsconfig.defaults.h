/* zsconfig.defaults.h - ZipScript-C default config file
 *
 * DO NOT EDIT THIS FILE!!
 * 
 * This file contains all settings, and it's default values.
 * You should not edit this file, but instead copy the settings
 * you need into zsconfig.h, which will override the default
 * settings found in here. So do not remove or change anything
 * in this file!!
 * A complete list of settings, with comments can be found in
 * zsconfig.h.example
 */


/*
 *      General Settings
 *      ================
 */

/* These should be changed to match your glftpd installation.
 * All pathnames must end with a slash ( / )
 * All paths are chroot'ed.
 * log - /path/name of your glftpd.log
 * storage - place where the zipscript stores racedata. Should not be accessible to your site's users.
 * gl_userfiles - path to glftpd's dir with userfiles.
 * dupepath - /path/name to glftpd's dupefile.
 * gl_section - names of sections defined in glftpd.conf
*/
#ifndef log
	#define log             "/ftp-data/logs/glftpd.log"
#endif
#ifndef storage
	#define storage         "/ftp-data/pzs-ng/"
#endif
#ifndef gl_userfiles
	#define gl_userfiles    "/ftp-data/users/"
#endif
#ifndef dupepath
	#define dupepath        "/ftp-data/logs/dupefile"
#endif
#ifndef gl_sections
	#define gl_sections     "DEFAULT"
#endif


/* Per default, announcing is disabled everywhere, use zip/sfv paths to enable announces and private paths to disable.
 * Don't be lazy! Be specific! And remember - pathnames are case sensitive.
 * All pathnames must end with a slash ( / )
 * All paths are chroot'ed.
 * group_dirs - paths where announcing should be turned off.
 * zip_dirs - paths where zipfiles normally are uploaded.
 * sfv_dirs - paths where sfv-releases normally are uploaded.
 * nocheck_dirs - paths where no checking of files occur at all. (All paths are checked by default)
 * audio_nocheck_dirs - paths where mp3 files are not checked for genre, bitrate etc.
 * allowed_types_exemption_dirs - paths where certain files are not checked/denied if no sfv-file is uploaded.
 * check_for_missing_nfo_dirs - these dirs will be checked for missing nfo's after a release is complete.
 */

#ifndef group_dirs
	#define group_dirs                      "/site/groups/"
#endif
#ifndef zip_dirs
	#define zip_dirs                        "/site/test/ /site/incoming/0day/"
#endif
#ifndef sfv_dirs
	#define sfv_dirs                        "/site/test/ /site/incoming/mp3/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/requests/"
#endif
#ifndef nocheck_dirs
	#define nocheck_dirs                    "/site/private/"
#endif
#ifndef audio_nocheck_dirs
	#define audio_nocheck_dirs              "/site/groups/ /site/incoming/requests/"
#endif
#ifndef allowed_types_exemption_dirs
	#define allowed_types_exemption_dirs    "/site/incoming/musicvideos/"
#endif
#ifndef check_for_missing_nfo_dirs
	#define check_for_missing_nfo_dirs	"/site/incoming/games/ /site/incoming/apps/"
#endif


/* Certain files are needed to change uid/gid to real names.
 * All paths are chroot'ed.
 * GROUPFILE - /path/name of glftpd's group file
 * PASSWDFILE - /path/name of glftpd's passwd file
 */
#ifndef GROUPFILE
	#define GROUPFILE       "/etc/group"
#endif
#ifndef PASSWDFILE
	#define PASSWDFILE      "/etc/passwd"
#endif

/* Directories for cleanup to check for broken incomplete files.
 * Used by the cleanup binary (which should be run in crontab) to remove stale links.
 * Use same %-values as with date.
 * All paths are chroot'ed.
 * check_today - check today's dir for stale links.
 * check_yesterday - check yesterday's dir for stale links.
 * cleanupdirs - paths to be checked for broken links - these are not recursive.
 *               This has also effect on the incomplete-list.sh script added in
 *               the archive. If you use this on your bot, make sure to fill in
 *               correct paths.
 */

#ifndef check_today
	#define check_today             TRUE
#endif
#ifndef check_yesterday
	#define check_yesterday         TRUE
#endif
#ifndef cleanupdirs
	#define cleanupdirs     "/site/test/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/0day/%m%d/ /site/incoming/mp3/%m%d/"
#endif

/* Write .message file on complete in group_dirs?
 */
#ifndef write_complete_message_in_group_dirs
	#define write_complete_message_in_group_dirs    TRUE
#endif

/* Hide name of uploaders in the .message-file in group-dirs? Setting this
 * to TRUE will convert the username to the groupname of the user.
 */
#ifndef hide_group_uploaders
	#define hide_group_uploaders    TRUE
#endif

/* You may also choose a custom message to be put into the .message file in
 * the group dirs. Define your message here, or put DISABLED to disable.
 */
#ifndef custom_group_dirs_complete_message
	#define custom_group_dirs_complete_message      "... Looks like this is a pre. :)"
#endif

/* Creates a zero-byte file for every non-existing file defined in sfv?
 */
#ifndef create_missing_files
	#define create_missing_files    TRUE
#endif

/* Defines type of status bar (see below for the format of the status bar)
 * 0 = file
 * 1 = directory
 */
#ifndef status_bar_type
	#define status_bar_type         1
#endif

/* Defines type of incomplete pointer (see below for the format of the incomplete pointer)
 * 0 = file
 * 1 = symbolic link
 */
#ifndef incompleteislink
	#define incompleteislink        1
#endif

/* Defines symbolic link type on incomplete and no-nfo indicators.
 * 0 = absolute path
 * 1 = relative path
 */
#ifndef userellink
	#define userellink              1
#endif

/* If file has suid bit set, program changes uid and gid to these (0 leaves option uncompiled)
 */
#ifndef program_uid
	#define program_uid             0
#endif
#ifndef program_gid
	#define program_gid             0
#endif

/* These file types are allowed without any checks
 */
#ifndef allowed_types
	#define allowed_types           "jpg,cue,m3u,mpg,avi,nfo,txt"
#endif

/* These file types are ignored from sfv
 * NOTE: , at the beginning ignores all files without extensions
 */
#ifndef ignored_types
	#define ignored_types           ",diz,jpg,cue,m3u,nfo,sfv,debug"
#endif

/* Special modes
 * debug_mode - create .debug files in releasedirs.
 * debug_altlog - put all .debug files in the mirror stored in the storage variable.
 *                Not reccommended with first use, as not all debug info will make it
 *                into that file. But might be good on a prolonged debug period on a
 *                "live" site.
 * benchmark_mode - output to the user uploading how long it took to run the zipscript.
 */
#ifndef debug_mode
	#define debug_mode		TRUE
#endif
#ifndef debug_altlog
	#define debug_altlog		FALSE
#endif
#ifndef benchmark_mode
	#define benchmark_mode		TRUE
#endif

/* Set this to TRUE if you wish to remove the .debug when removing a dir completely.
 * This should let users be able to delete a dir w/o access to the 'wipe' command.
 */
#ifndef remove_dot_debug_on_delete
	#define remove_dot_debug_on_delete	TRUE
#endif


/*
 *      ZIP Settings
 *      ============
 */

/* Enter the (chroot'ed) path/name of unzip. This is used to test integrity of zipfiles.
 */
#ifndef unzip_bin
	#define unzip_bin		"/bin/unzip"
#endif


/*
 *      SFV Settings
 *      ============
 */

/* Removes duplicate entries and comments from the sfv - some lame zipscripts seem to add duplicate entries :p
*/
#ifndef sfv_dupecheck
	#define sfv_dupecheck           TRUE
#endif

/* Writes a plain sfv - removing all comments etc
*/
#ifndef sfv_cleanup
	#define sfv_cleanup		TRUE
#endif

/* Also changes the case of the text in the sfv to all lowercase
*/
#ifndef sfv_cleanup_lowercase
	#define sfv_cleanup_lowercase	FALSE
#endif

/* Use windows style linefeeds (<cr><lf>) in the cleaned sfv file
*/
#ifndef sfv_cleanup_crlf
	#define sfv_cleanup_crlf	TRUE
#endif

/* Should new sfv files be denied in dir? If not, the new sfv will be checked and denied/allowed depending on the
 * content of the sfv.
 */
#ifndef deny_double_sfv
	#define deny_double_sfv         FALSE
#endif

/* Exclude non sfv directories (ie group/request directory)
*/
#ifndef exclude_non_sfv_dirs
	#define exclude_non_sfv_dirs    TRUE
#endif

/* Force sfv to be uploaded first, before accepting any files
*/
#ifndef force_sfv_first
	#define force_sfv_first         FALSE
#endif


/*
 *      MP3 Settings
 *      ============
 */

/* These directories will contain symlinks to your audio releases, based on genre, year and artist.
 * Ignore these paths if you have no plans on sorting your releases.
 * All paths are chroot'ed.
 */
#ifndef audio_genre_path
	#define audio_genre_path                "/site/incoming/music.by.genre/"
#endif
#ifndef audio_artist_path
	#define audio_artist_path               "/site/incoming/music.by.artist/"
#endif
#ifndef audio_year_path
	#define audio_year_path                 "/site/incoming/music.by.year/"
#endif
#ifndef audio_group_path
	#define audio_group_path                "/site/incoming/music.by.group/"
#endif

/* It is a good idea to prevent crap from filling your hds.
 * Ignore these settings if you do not plan to restrict your uploads.
 */
#ifndef allowed_constant_bitrates
	#define allowed_constant_bitrates       "160,192"
#endif
#ifndef allowed_years
	#define allowed_years                   "2000,2001,2002,2003,2004,2005"
#endif
#ifndef banned_genres
	#define banned_genres                   "Christian Rap"
#endif
#ifndef allowed_genres
	#define allowed_genres                  "Rock"
#endif

/* Audio related symlinks - set to TRUE if you wish to sort/symlink releases, or FALSE if not.
 */
#ifndef audio_genre_sort
	#define audio_genre_sort                FALSE
#endif
#ifndef audio_year_sort
	#define audio_year_sort                 FALSE
#endif
#ifndef audio_artist_sort
	#define audio_artist_sort               FALSE
#endif
#ifndef audio_group_sort
	#define audio_group_sort                FALSE
#endif

/* Audio related checks for quality/type - here you enable/disable the restriction you defined earlier.
 * If warn is true, any banned files will not be deleted, but instead a warning message will be logged
 * to your glftpd.log.
 */
#ifndef audio_cbr_check
	#define audio_cbr_check                 TRUE
#endif
#ifndef audio_cbr_warn
	#define audio_cbr_warn                  TRUE
#endif
#ifndef audio_year_check
	#define audio_year_check                TRUE
#endif
#ifndef audio_year_warn
	#define audio_year_warn                 TRUE
#endif

/* either "audio_banned_genre_check" or "audio_allowed_genre_check" should be set to TRUE
 */
#ifndef audio_banned_genre_check
	#define audio_banned_genre_check        TRUE
#endif
#ifndef audio_allowed_genre_check
	#define audio_allowed_genre_check       FALSE
#endif
#ifndef audio_genre_warn
	#define audio_genre_warn                TRUE
#endif

/* Create m3u file on release complete for audio release?
 */
#ifndef create_m3u
	#define create_m3u                      TRUE
#endif


/*
 *      Race/Announce Settings
 *      ======================
 *      NOTE: You may disable announces by typing DISABLED instead of cookie string
 *      (do not use DISABLED with message etc files!!!)
 */

/* New leader needs this number of files more than current leader to be counted as "newleader"
 * (reduces "spam" in channel)
 */
#ifndef enable_files_ahead
	#define enable_files_ahead      TRUE
#endif
#ifndef newleader_files_ahead
	#define newleader_files_ahead   2
#endif

/* If minium is not reached - announcement will be disabled. The number entered represents
 * the minimum number of files in the release.
 */
#ifndef min_newleader_files
	#define min_newleader_files     1
#endif
#ifndef min_update_files
	#define min_update_files        1
#endif
#ifndef min_halfway_files
	#define min_halfway_files       10
#endif

/* Limit number of users/groups to display in stats.
 */
#ifndef max_users_in_top
	#define max_users_in_top        7
#endif
#ifndef max_groups_in_top
	#define max_groups_in_top       7
#endif

/* Enable/disable norace announces (will be used instead of normal announces, if there is only one user in race)
 */
#ifndef announce_norace
	#define announce_norace         TRUE
#endif

/* Defines how stats are written into log
 * 0 = complete msg only
 * 1 = n line mode (complete, pre_stats, user top, between stats, group top, post stats)
 */
#ifndef zip_complete_type
	#define zip_complete_type               0
#endif
#ifndef zip_norace_complete_type
	#define zip_norace_complete_type        0
#endif
#ifndef rar_complete_type
	#define rar_complete_type               1
#endif
#ifndef rar_norace_complete_type
	#define rar_norace_complete_type        0
#endif
#ifndef audio_complete_type
	#define audio_complete_type             1
#endif
#ifndef audio_norace_complete_type
	#define audio_norace_complete_type      0
#endif
#ifndef video_complete_type
	#define video_complete_type             1
#endif
#ifndef video_norace_complete_type
	#define video_norace_complete_type      0
#endif
#ifndef other_complete_type
	#define other_complete_type             1
#endif
#ifndef other_norace_complete_type
	#define other_norace_complete_type      0
#endif

/* Get list of competitors (all racers excluding current user) - stored in %R cookie
 */
#ifndef get_competitor_list
	#define get_competitor_list     TRUE
#endif


/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * !! Below follow a series of settings that use cookies.        !!
 * !! These cookies can be found in the COOKIES file.            !!
 * !! Before you change any of these, make sure you read it.     !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */


/*
 *      Output variables used on site (.message file)
 *      =============================================
 */

/* Write a file on complete in the releasedir, containing stats/raceinfo.
 */
#ifndef write_complete_message
	#define write_complete_message  TRUE
#endif

/* What the file should be called.
 */
#ifndef message_file_name
	#define message_file_name       ".message"
#endif

/* Various Output
 */
#ifndef message_header
	#define message_header          ""
#endif
#ifndef message_user_header
	#define message_user_header     "\n                           U S E R T O P\n" \
	    "+--------------------------------------------------------------------+\n"
#endif
#ifndef message_user_nody
	#define message_user_body       "%3n %-34U %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#endif
#ifndef message_user_footer
	#define message_user_footer     "+--------------------------------------------------------------------+\n" \
	    "%3u Total %36.1mM %3fF 100.0%% %5.0aKBs\n"
#endif
#ifndef message_group_header
	#define message_group_header    "\n\n                          G R O U P T O P\n" \
	    "+--------------------------------------------------------------------+\n"
#endif
#ifndef message_group_body
	#define message_group_body      "%3n %-34g %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#endif
#ifndef message_group_footer
	#define message_group_footer    "+--------------------------------------------------------------------+\n" \
	    "%3g Total %36.1mM %3fF 100.0%% %5.0aKBs\n"
#endif
#ifndef message_mp3
	#define message_mp3             "\n\n                            I D 3 - T A G\n" \
	    "+--------------------------------------------------------------------+\n" \
	"  Artist : %x\n" \
	"  Album  : %W\n" \
	"  Genre  : %-34w Rate  : %Xkbit/sec\n" \
	"  Tracks : %-34f Year  : %Y\n" \
	"  Encoder: %-34i Preset: %I\n" \
	"+--------------------------------------------------------------------+\n"
#endif
#ifndef message_footer
	#define message_footer          ""
#endif
#ifndef video_completebar
	#define video_completebar       "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#endif
#ifndef audio_completebar
	#define audio_completebar       "[dS] - ( %.0mM %fF - COMPLETE - %w %Y ) - [dS]"
#endif
#ifndef rar_completebar
	#define rar_completebar         "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#endif
#ifndef other_completebar
	#define other_completebar       "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#endif
#ifndef zip_completebar
	#define zip_completebar         "[dS] - ( %.0mM %fF - COMPLETE ) - [dS]"
#endif
#ifndef del_completebar
	#define del_completebar         "\\[dS] - \\( .*F - COMPLETE.*) - \\[dS]"
#endif
#ifndef zipscript_header
	#define zipscript_header         ".-== PZS-NG Zipscript-C ==--,d1'--== (C) 2004 ==---.\n"
#endif
#ifndef zipscript_sfv_ok
	#define zipscript_sfv_ok         "| + SFV-file: oK!                                  |\n"
#endif
#ifndef zipscript_any_ok
	#define zipscript_any_ok         "| + File: ok!                                      |\n"
#endif
#ifndef zipscript_SFV_ok
	#define zipscript_SFV_ok         "| + CRC-Check: oK!                                 |\n"
#endif
#ifndef zipscript_SFV_skip
	#define zipscript_SFV_skip       "| + CRC-Check: SKIPPED!                            |\n"
#endif
#ifndef zipscript_zip_ok
	#define zipscript_zip_ok         "| + ZiP integrity: oK!                             |\n"
#endif
#ifndef realtime_mp3_info
	#define realtime_mp3_info        "+-=[ID3tag]=------------------------===------------+\n" \
	"| Title  : %-39y |\n" \
	"| Artist : %-39x |\n" \
	"| Album  : %-39W |\n" \
	"| Genre  : %-39w |\n" \
	"| Year   : %-39Y |\n"
#endif
#ifndef realtime_user_header
	#define realtime_user_header     "+-=[UserTop]=-------------------===----------------+\n"
#endif
#ifndef realtime_user_body
	#define realtime_user_body       "| %2n. %-17u %8.1mmB %2fF %7.0skB/s |\n"
#endif
#ifndef realtime_user_footer
	#define realtime_user_footer     ""
#endif
#ifndef realtime_group_header
	#define realtime_group_header    "+-=[GroupTop]=--------------------===--------------+\n"
#endif
#ifndef realtime_group_body
	#define realtime_group_body      "| %2n. %-17g %8.1mmB %2fF %7.0skB/s |\n"
#endif
#ifndef realtime_group_footer
	#define realtime_group_footer    ""
#endif
#ifndef zipscript_footer_unknown
	#define zipscript_footer_unknown "`-[ - NO - SFV - ]------------------------[%2F/??]--'\n"
#endif
#ifndef zipscript_footer_ok
	#define zipscript_footer_ok      "`-[%V]------------------------[%2F/%-2f]--'\n"
#endif
#ifndef zipscript_footer_error
	#define zipscript_footer_error   "| - %-46v |\n" \
	    "`-----------------------------------========-------'\n"
#endif
#ifndef zipscript_footer_skip
	#define zipscript_footer_skip    "`--------------------------------=====-------------'\n"
#endif


/*
 *      Indicators and progress-meters.
 *      ===============================
 */

/* How Indicators look
 * incomplete_cd_indicator = when a multi-cd release is incomplete.
 * incomplete_indicator = when a normal release is incomplete.
 * incomplete_nfo_indicator = when a normal release is missing nfo in the dir.
 * incomplete_base_nfo_indicator = when a multi-cd release is missing nfo in the base dir.
 */
#ifndef incomplete_cd_indicator
	#define incomplete_cd_indicator         "../../(incomplete)-(%0)-%1"
#endif
#ifndef incomplete_indicator
	#define incomplete_indicator            "../(incomplete)-%0"
#endif
#ifndef incomplete_nfo_indicator
	#define incomplete_nfo_indicator	"../(no-nfo)-%0"
#endif
#ifndef incomplete_base_nfo_indicator
	#define incomplete_base_nfo_indicator	"../../(no-nfo)-%1"
#endif
#ifndef progressmeter
	#define progressmeter                   "[%V] - %3.0p%% Complete - [dS]"
#endif
#ifndef del_progressmeter
	#define del_progressmeter               "\\[.*] - ...% Complete - \\[dS]"
#endif


/*
 *      Various settings
 *      ================
 */

/* Enable/disable accept script (accept script is run, if file is ok)
 */
#ifndef enable_accept_script
	#define enable_accept_script    FALSE
#endif
#ifndef accept_script
	#define accept_script           "/bin/imdb_parse.sh"
#endif

/* Enable/disable nfo script (only run on .nfo files)
 */
#ifndef enable_nfo_script
	#define enable_nfo_script       FALSE
#endif
#ifndef nfo_script
	#define nfo_script              "/bin/psxc-imdb.sh"
#endif

/* Enable/disable complete script (complete script is run, if release is complete)
 */
#ifndef enable_complete_script
	#define enable_complete_script  FALSE
#endif
#ifndef complete_script
	#define complete_script         "/bin/nfo_copy.sh"
#endif

/* Enable/disable mp3 script (run only once, after first mp3-file is uploaded)
 */
#ifndef enable_mp3_script
	#define enable_mp3_script       FALSE
#endif
#ifndef mp3_script
	#define mp3_script              "/bin/mp3-genres.sh"
#endif
#ifndef mp3_script_cookies
	#define mp3_script_cookies      "\"%w\" \"%W\" \"%x\" \"%X\" \"%y\" \"%Y\" \"%z\" \"%h\" \"%q\" \"%Q\" \"%j\" \"%i\" \"%I\""
#endif

/* Enable/disable unduper script (runs if sfv is uploaded after files, and files
 *                                are marked as bad and deleted)
 */
#ifndef enable_unduper_script
	#define enable_unduper_script   TRUE
#endif
#ifndef unduper_script
	#define unduper_script          "/bin/ng-undupe"
#endif

/* The following settings allow you to disable certain announces. This
 * should probably be done in your bot, but as of this writing, the default
 * dzsbot does not support such an option.
 */
#define disable_audio_race		FALSE
#define disable_audio_sfv		FALSE
#define disable_audio_update		FALSE
#define disable_audio_halfway		FALSE
#define disable_audio_newleader		FALSE
#define disable_audio_complete		FALSE
#define disable_audio_norace_halfway	FALSE
#define disable_audio_norace_complete	FALSE
#define disable_video_race		FALSE
#define disable_video_sfv		FALSE
#define disable_video_update		FALSE
#define disable_video_halfway		FALSE
#define disable_video_newleader		FALSE
#define disable_video_complete		FALSE
#define disable_video_norace_halfway	FALSE
#define disable_video_norace_complete	FALSE
#define disable_rar_race		FALSE
#define disable_rar_sfv			FALSE
#define disable_rar_update		FALSE
#define disable_rar_halfway		FALSE
#define disable_rar_newleader		FALSE
#define disable_rar_complete		FALSE
#define disable_rar_norace_halfway	FALSE
#define disable_rar_norace_complete	FALSE
#define disable_other_race		FALSE
#define disable_other_sfv		FALSE
#define disable_other_update		FALSE
#define disable_other_halfway		FALSE
#define disable_other_newleader		FALSE
#define disable_other_complete		FALSE
#define disable_other_norace_halfway	FALSE
#define disable_other_norace_complete	FALSE
#define disable_zip_race		FALSE
#define disable_zip_update		FALSE
#define disable_zip_halfway		FALSE
#define disable_zip_newleader		FALSE
#define disable_zip_complete		FALSE
#define disable_zip_norace_halfway	FALSE
#define disable_zip_norace_complete	FALSE


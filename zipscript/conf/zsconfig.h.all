/* This file is autogenerated by the following line:
 * cat zipscript/include/zsconfig.defaults.h | grep -e "^#define" -a -e "^ " -a -e "^/" >zipscript/conf/zsconfig.h.all
 */

/*
 *
 * zsconfig.defaults.h - ZipScript-C default config file
 * 
 * DO NOT EDIT THIS FILE!!
 * 
 * This file contains all settings, and it's default values. You should not edit
 * this file, but instead copy the settings you need into zsconfig.h, which
 * will override the default settings found in here. So do not remove or
 * change anything in this file!! A complete list of settings, with comments
 * can be found in README.ZSCONFIG
 */
/*
 * General Settings ================
 */
/*
 * These should be changed to match your glftpd installation. All pathnames
 * must end with a slash ( / ) All paths are chroot'ed. log - /path/name of
 * your glftpd.log storage - place where the zipscript stores racedata.
 * Should not be accessible to your site's users. gl_userfiles - path to
 * glftpd's dir with userfiles. dupepath - /path/name to glftpd's dupefile.
 * gl_section - names of sections defined in glftpd.conf
 */
#define sitepath_dir	"/site/"
#define log             "/ftp-data/logs/glftpd.log"
#define storage         "/ftp-data/pzs-ng/"
#define gl_userfiles    "/ftp-data/users/"
#define dupepath        "/ftp-data/logs/dupefile"
#define gl_sections     "DEFAULT"
/*
 * Per default, announcing is disabled everywhere, use zip/sfv paths to
 * enable announces and private paths to disable. Don't be lazy! Be specific!
 * And remember - pathnames are case sensitive. All pathnames must end with a
 * slash ( / ) All paths are chroot'ed. group_dirs - paths where announcing
 * should be turned off. zip_dirs - paths where zipfiles normally are
 * uploaded. sfv_dirs - paths where sfv-releases normally are uploaded.
 * nocheck_dirs - paths where no checking of files occur at all. (All paths
 * are checked by default) audio_nocheck_dirs - paths where mp3 files are not
 * checked for genre, bitrate etc. allowed_types_exemption_dirs - paths where
 * certain files are not checked/denied if no sfv-file is uploaded.
 * check_for_missing_nfo_dirs - these dirs will be checked for missing nfo's
 * after a release is complete.
 */
#define group_dirs                      "/site/groups/"
#define zip_dirs                        "/site/test/ /site/incoming/0day/"
#define sfv_dirs                        "/site/test/ /site/incoming/mp3/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/requests/"
#define nocheck_dirs                    "/site/private/"
#define rescan_nocheck_dirs_allowed	TRUE
#define audio_nocheck_dirs              "/site/groups/ /site/incoming/requests/"
#define allowed_types_exemption_dirs    "/site/incoming/musicvideos/"
#define check_for_missing_nfo_dirs	"/site/incoming/games/ /site/incoming/apps/"
/*
 * Certain files are needed to change uid/gid to real names. All paths are
 * chroot'ed. GROUPFILE - /path/name of glftpd's group file PASSWDFILE -
 * /path/name of glftpd's passwd file
 */
#define GROUPFILE       "/etc/group"
#define PASSWDFILE      "/etc/passwd"
/*
 * You can use a cookie for sitename, short version. This will be used in
 * incompletebars, completebars etc.
 */
#define short_sitename	"NG"
/*
 * Directories for cleanup to check for broken incomplete files. Used by the
 * cleanup binary (which should be run in crontab) to remove stale links. Use
 * same %-values as with date. All paths are chroot'ed. check_today - check
 * today's dir for stale links. check_yesterday - check yesterday's dir for
 * stale links. cleanupdirs - paths to be checked for broken links - these
 * are not recursive. This has also effect on the incomplete-list.sh script
 * added in the archive. If you use this on your bot, make sure to fill in
 * correct paths.
 */
#define check_today             TRUE
#define check_yesterday         TRUE
#define cleanupdirs     "/site/test/ /site/incoming/games/ /site/incoming/apps/ /site/incoming/musicvideos/ /site/incoming/0day/%m%d/ /site/incoming/mp3/%m%d/"
/*
 * Write .message file on complete in group_dirs?
 */
#define write_complete_message_in_group_dirs    TRUE
/*
 * Hide name of uploaders in the .message-file in group-dirs? Setting this to
 * TRUE will convert the username to the groupname of the user.
 */
#define hide_group_uploaders    TRUE
/*
 * You may also choose a custom message to be put into the .message file in
 * the group dirs. Define your message here, or put DISABLED to disable.
 */
#define custom_group_dirs_complete_message      "... Looks like this is a pre. :)"
/*
 * Creates a zero-byte file for every non-existing file defined in sfv?
 */
#define create_missing_files    TRUE
/*
 * Defines type of status bar (see below for the format of the status bar) 0
 * = file 1 = directory
 */
#define status_bar_type         1
/*
 * Defines type of incomplete pointer (see below for the format of the
 * incomplete pointer) 0 = file 1 = symbolic link
 */
#define incompleteislink        1
/*
 * Defines symbolic link type on incomplete and no-nfo indicators. 0 =
 * absolute path 1 = relative path
 */
#define userellink              1
/*
 * If file has suid bit set, program changes uid and gid to these (0 leaves
 * option uncompiled)
 */
#define program_uid             0
#define program_gid             0
/*
 * These file types are allowed without any checks
 */
#define allowed_types           "jpg,cue,m3u,mpg,avi,nfo,txt"
/*
 * These file types are ignored from sfv NOTE: , at the beginning ignores all
 * files without extensions
 */
#define ignored_types           ",diz,jpg,cue,m3u,nfo,sfv,debug"
/*
 * Special modes debug_mode - create .debug files in releasedirs.
 * debug_altlog - put all .debug files in the mirror stored in the storage
 * variable. Not reccommended with first use, as not all debug info will make
 * it into that file. But might be good on a prolonged debug period on a
 * "live" site. benchmark_mode - output to the user uploading how long it
 * took to run the zipscript.
 */
#define debug_mode		TRUE
#define debug_altlog		FALSE
#define benchmark_mode		TRUE
/*
 * Set this to TRUE if you wish to remove the .debug when removing a dir
 * completely. This should let users be able to delete a dir w/o access to
 * the 'wipe' command.
 */
#define remove_dot_debug_on_delete	TRUE
/*
 * ZIP Settings ============
 */
/*
 * Enter the (chroot'ed) path/name of unzip. This is used to test integrity
 * of zipfiles.
 */
#define unzip_bin		"/bin/unzip"
/*
 * SFV Settings ============
 */
/*
 * Removes duplicate entries and comments from the sfv - some lame zipscripts
 * seem to add duplicate entries :p
 */
#define sfv_dupecheck           TRUE
/*
 * Writes a plain sfv - removing all comments etc
 */
#define sfv_cleanup		TRUE
/*
 * Also changes the case of the text in the sfv to all lowercase
 */
#define sfv_cleanup_lowercase	FALSE
/*
 * Use windows style linefeeds (<cr><lf>) in the cleaned sfv file
 */
#define sfv_cleanup_crlf	TRUE
/*
 * Should new sfv files be denied in dir? If not, the new sfv will be checked
 * and denied/allowed depending on the content of the sfv.
 */
#define deny_double_sfv         FALSE
/*
 * Exclude non sfv directories (ie group/request directory)
 */
#define exclude_non_sfv_dirs    TRUE
/*
 * Force sfv to be uploaded first, before accepting any files
 */
#define force_sfv_first         FALSE
/*
 * MP3 Settings ============
 */
/*
 * These directories will contain symlinks to your audio releases, based on
 * genre, year and artist. Ignore these paths if you have no plans on sorting
 * your releases. All paths are chroot'ed.
 */
#define audio_genre_path                "/site/incoming/music.by.genre/"
#define audio_artist_path               "/site/incoming/music.by.artist/"
#define audio_year_path                 "/site/incoming/music.by.year/"
#define audio_group_path                "/site/incoming/music.by.group/"
/*
 * It is a good idea to prevent crap from filling your hds. Ignore these
 * settings if you do not plan to restrict your uploads.
 */
#define allowed_constant_bitrates       "160,192"
#define allowed_years                   "2000,2001,2002,2003,2004,2005"
#define banned_genres                   "Christian Rap,Christian Gangsta Rap,Contemporary Christian,Christian Rock"
#define allowed_genres                  "Top 40,Pop Funk,Rock,Pop"
/*
 * Audio related symlinks - set to TRUE if you wish to sort/symlink releases,
 * or FALSE if not.
 */
#define audio_genre_sort                FALSE
#define audio_year_sort                 FALSE
#define audio_artist_sort               FALSE
#define audio_group_sort                FALSE
/*
 * Audio related checks for quality/type - here you enable/disable the
 * restriction you defined earlier. If warn is true, any banned files will
 * not be deleted, but instead a warning message will be logged to your
 * glftpd.log.
 */
#define audio_cbr_check                 TRUE
#define audio_cbr_warn                  TRUE
#define audio_year_check                TRUE
#define audio_year_warn                 TRUE
/*
 * either "audio_banned_genre_check" or "audio_allowed_genre_check" should be
 * set to TRUE
 */
#define audio_banned_genre_check        TRUE
#define audio_allowed_genre_check       FALSE
#define audio_genre_warn                TRUE
/*
 * Create m3u file on release complete for audio release?
 */
#define create_m3u                      TRUE
/*
 * Race/Announce Settings ====================== NOTE: You may disable
 * announces by typing DISABLED instead of cookie string (do not use DISABLED
 * with message etc files!!!)
 */
/*
 * New leader needs this number of files more than current leader to be
 * counted as "newleader" (reduces "spam" in channel)
 */
#define enable_files_ahead      TRUE
#define newleader_files_ahead   2
/*
 * If minium is not reached - announcement will be disabled. The number
 * entered represents the minimum number of files in the release.
 */
#define min_newleader_files     1
#define min_update_files        1
#define min_halfway_files       10
/*
 * Limit number of users/groups to display in stats.
 */
#define max_users_in_top        7
#define max_groups_in_top       7
/*
 * Enable/disable norace announces (will be used instead of normal announces,
 * if there is only one user in race)
 */
#define announce_norace         TRUE
/*
 * Defines how stats are written into log 0 = complete msg only 1 = n line
 * mode (complete, pre_stats, user top, between stats, group top, post stats)
 */
#define zip_complete_type               0
#define zip_norace_complete_type        0
#define rar_complete_type               1
#define rar_norace_complete_type        0
#define audio_complete_type             1
#define audio_norace_complete_type      0
#define video_complete_type             1
#define video_norace_complete_type      0
#define other_complete_type             1
#define other_norace_complete_type      0
/*
 * Get list of competitors (all racers excluding current user) - stored in %R
 * cookie
 */
#define get_competitor_list     TRUE
/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! !! Below
 * follow a series of settings that use cookies.        !! !! These cookies
 * can be found in the COOKIES file.            !! !! Before you change any
 * of these, make sure you read it.     !!
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */
/*
 * Output variables used on site (.message file)
 * =============================================
 */
/*
 * Write a file on complete in the releasedir, containing stats/raceinfo.
 */
#define write_complete_message  TRUE
/*
 * What the file should be called.
 */
#define message_file_name       ".message"
/*
 * Various Output
 */
#define message_header          ""
#define message_user_header     "\n                           U S E R T O P\n" \
#define message_user_body       "%3n %-34U %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#define message_user_footer     "+--------------------------------------------------------------------+\n" \
#define message_group_header    "\n\n                          G R O U P T O P\n" \
#define message_group_body      "%3n %-34g %7.1mM %3fF %5.1p%% %5.0sKBs\n"
#define message_group_footer    "+--------------------------------------------------------------------+\n" \
#define message_mp3             "\n\n                            I D 3 - T A G\n" \
#define message_footer          ""
#define video_completebar       "[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define audio_completebar       "[%Z] - ( %.0mM %fF - COMPLETE - %w %Y ) - [%Z]"
#define rar_completebar         "[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define other_completebar       "[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define zip_completebar         "[%Z] - ( %.0mM %fF - COMPLETE ) - [%Z]"
#define del_completebar         "\\[%Z] - \\( .*F - COMPLETE.*) - \\[%Z]"
#define zipscript_header         ".-== PZS-NG Zipscript-C ==--,d1'--== (C) 2004 ==---.\n"
#define zipscript_sfv_ok         "| + SFV-file: oK!                                  |\n"
#define zipscript_any_ok         "| + File: ok!                                      |\n"
#define zipscript_SFV_ok         "| + CRC-Check: oK!                                 |\n"
#define zipscript_SFV_skip       "| + CRC-Check: SKIPPED!                            |\n"
#define zipscript_zip_ok         "| + ZiP integrity: oK!                             |\n"
#define realtime_mp3_info        "+-=[ID3tag]=------------------------===------------+\n" \
#define realtime_user_header     "+-=[UserTop]=-------------------===----------------+\n"
#define realtime_user_body       "| %2n. %-17u %8.1mmB %2fF %7.0skB/s |\n"
#define realtime_user_footer     ""
#define realtime_group_header    "+-=[GroupTop]=--------------------===--------------+\n"
#define realtime_group_body      "| %2n. %-17g %8.1mmB %2fF %7.0skB/s |\n"
#define realtime_group_footer    ""
#define zipscript_footer_unknown "`-[ - NO - SFV - ]------------------------[%2F/??]--'\n"
#define zipscript_footer_ok      "`-[%V]------------------------[%2F/%-2f]--'\n"
#define zipscript_footer_error   "| - %-46v |\n" \
#define zipscript_footer_skip    "`--------------------------------=====-------------'\n"
/*
 * Indicators and progress-meters. ===============================
 */
/*
 * How Indicators look incomplete_cd_indicator = when a multi-cd release is
 * incomplete. incomplete_indicator = when a normal release is incomplete.
 * incomplete_nfo_indicator = when a normal release is missing nfo in the
 * dir. incomplete_base_nfo_indicator = when a multi-cd release is missing
 * nfo in the base dir.
 */
#define incomplete_cd_indicator         "../../(incomplete)-(%0)-%1"
#define incomplete_indicator            "../(incomplete)-%0"
#define incomplete_nfo_indicator	"../(no-nfo)-%0"
#define incomplete_base_nfo_indicator	"../../(no-nfo)-%1"
#define progressmeter                   "[%V] - %3.0p%% Complete - [%Z]"
#define del_progressmeter               "\\[.*] - ...%% Complete - \\[%Z]"
/*
 * Various settings ================
 */
/*
 * Enable/disable accept script (accept script is run, if file is ok)
 */
#define enable_accept_script    FALSE
#define accept_script           "/bin/imdb_parse.sh"
/*
 * Enable/disable nfo script (only run on .nfo files)
 */
#define enable_nfo_script       FALSE
#define nfo_script              "/bin/psxc-imdb.sh"
/*
 * Enable/disable complete script (complete script is run, if release is
 * complete)
 */
#define enable_complete_script  FALSE
#define complete_script         "/bin/nfo_copy.sh"
/*
 * Enable/disable mp3 script (run only once, after first mp3-file is
 * uploaded)
 */
#define enable_mp3_script       FALSE
#define mp3_script              "/bin/mp3-genres.sh"
#define mp3_script_cookies      "\"%w\" \"%W\" \"%x\" \"%X\" \"%y\" \"%Y\" \"%z\" \"%h\" \"%q\" \"%Q\" \"%j\" \"%i\" \"%I\""
/*
 * Enable/disable unduper script (runs if sfv is uploaded after files, and
 * files are marked as bad and deleted)
 */
#define enable_unduper_script   TRUE
#define unduper_script          "/bin/ng-undupe"
/*
 * The following settings allow you to disable certain announces. This should
 * probably be done in your bot, but as of this writing, the default dzsbot
 * does not support such an option.
 */
#define disable_audio_race		FALSE
#define disable_audio_sfv		FALSE
#define disable_audio_update		FALSE
#define disable_audio_halfway		FALSE
#define disable_audio_newleader		FALSE
#define disable_audio_complete		FALSE
#define disable_audio_norace_halfway	FALSE
#define disable_audio_norace_complete	FALSE
#define disable_video_race		FALSE
#define disable_video_sfv		FALSE
#define disable_video_update		FALSE
#define disable_video_halfway		FALSE
#define disable_video_newleader		FALSE
#define disable_video_complete		FALSE
#define disable_video_norace_halfway	FALSE
#define disable_video_norace_complete	FALSE
#define disable_rar_race		FALSE
#define disable_rar_sfv			FALSE
#define disable_rar_update		FALSE
#define disable_rar_halfway		FALSE
#define disable_rar_newleader		FALSE
#define disable_rar_complete		FALSE
#define disable_rar_norace_halfway	FALSE
#define disable_rar_norace_complete	FALSE
#define disable_other_race		FALSE
#define disable_other_sfv		FALSE
#define disable_other_update		FALSE
#define disable_other_halfway		FALSE
#define disable_other_newleader		FALSE
#define disable_other_complete		FALSE
#define disable_other_norace_halfway	FALSE
#define disable_other_norace_complete	FALSE
#define disable_zip_race		FALSE
#define disable_zip_sfv			FALSE
#define disable_zip_update		FALSE
#define disable_zip_halfway		FALSE
#define disable_zip_newleader		FALSE
#define disable_zip_complete		FALSE
#define disable_zip_norace_halfway	FALSE
#define disable_zip_norace_complete	FALSE
